// Generated by CoffeeScript 1.12.6
(function() {
  var extendsNode, getOrCall, isBool, isDom, isDomText, isFunc, isNodeInstance, isNot, isNumber, isObject, isSimple, isString, normalizeEvent, normalizeName;

  getOrCall = function(value) {
    if (isFunc(value)) {
      return value();
    } else {
      return value;
    }
  };

  isBool = function(value) {
    return typeof value === 'boolean';
  };

  isNumber = function(value) {
    return typeof value === 'number';
  };

  isString = function(value) {
    return typeof value === 'string';
  };

  isObject = function(value) {
    return typeof value === 'object';
  };

  isFunc = function(value) {
    return typeof value === 'function';
  };

  isDom = function(value) {
    return value && value.nodeType === 1;
  };

  isDomText = function(value) {
    return value && value.nodeType === 3;
  };

  isNot = function(value) {
    return value === null || value === void 0;
  };

  isSimple = function(value) {
    var t;
    return (t = typeof value) === 'string' || t === 'number' || t === 'boolean';
  };

  extendsNode = function(value) {
    return isFunc(value) && (isFunc(value.prototype.render) || value === ViewNode);
  };

  isNodeInstance = function(value) {
    return value && value.__id__ && value.render;
  };

  normalizeName = function(name) {
    return name.replace(/[A-Z]/g, function(name) {
      return '-' + name.toLowerCase();
    });
  };

  normalizeEvent = function(type) {
    type = type.slice(2);
    return type.charAt(0).toLowerCase() + normalizeName(type.slice(1));
  };

  module.exports = {
    getOrCall: getOrCall,
    isBool: isBool,
    isNumber: isNumber,
    isString: isString,
    isObject: isObject,
    isFunc: isFunc,
    isDom: isDom,
    isDomText: isDomText,
    isNot: isNot,
    isSimple: isSimple,
    extendsNode: extendsNode,
    normalizeName: normalizeName,
    normalizeEvent: normalizeEvent,
    isNodeInstance: isNodeInstance
  };

}).call(this);

//# sourceMappingURL=utils.js.map
