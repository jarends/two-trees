{"version":3,"file":"context.pack.js","sourceRoot":"","sources":["context.pack.js"],"sections":[{"offset":{"line":186,"column":0},"map":{"version":3,"file":"context.js","sourceRoot":"","sources":["../coffee/context.coffee"],"names":[],"mappings":";AAAA;AAAA,MAAA;;EAAA,QAAA,GAAW,OAAA,CAAQ,wBAAR;;EACX,QAAA,GAAW,OAAA,CAAQ,wBAAR;;EACX,OAAA,GAAW,OAAA,CAAQ,YAAR;;EAGL;IAGW,iBAAA;AAET,UAAA;MAAA,KAAA,GAAQ,IAAI,QAAJ,CACJ;QAAA,KAAA,EAAS,kBAAT;QACA,OAAA,EAAS,GADT;OADI;MAKR,GAAA,GAAM,IAAI,OAAJ,CACF;QAAA,GAAA,EAAO,OAAP;QACA,KAAA,EAAO,KADP;OADE;MAGN,QAAQ,CAAC,MAAT,CAAgB,GAAhB,EAAqB,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAArB;IAVS;;;;;;EAajB,MAAM,CAAC,OAAP,GAAiB,IAAI,OAAJ,CAAA;AArBjB","sourcesContent":["ViewTree = require '../../src/js/view-tree'\nDataTree = require '../../src/js/data-tree'\nAppView  = require './app-view'\n\n\nclass Context\n\n\n    constructor: () ->\n\n        model = new DataTree\n            title:   'hello two-trees!'\n            bgGreen: 255\n\n\n        app = new AppView\n            tag:   AppView\n            model: model\n        ViewTree.render app, document.querySelector '.app'\n\n        \nmodule.exports = new Context()"]}},{"offset":{"line":223,"column":0},"map":{"version":3,"file":"../../src/js/view-tree.js","sourceRoot":"","sources":["../../src/coffee/view-tree.coffee"],"names":[],"mappings":"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","sourcesContent":["__id__ = 0\n\n\nCOMP_CFG_ERROR = 'Cfg for creating a node must either be a string or an object containing a tag property as not empty string or a node class.'\nVIEW_CFG_ERROR = 'Cfg for creating a view must either be a string or an object containing a tag property as not empty string'\n\n\nisBool   = (value) -> typeof value == 'boolean'\nisNumber = (value) -> typeof value == 'number'\nisString = (value) -> typeof value == 'string' or value == value + ''\nisObject = (value) -> typeof value == 'object'\nisFunc   = (value) -> typeof value == 'function'\nisHTML   = (value) -> value instanceof HTMLElement\nisNot    = (value) -> value == null or value == undefined\nisSimple = (value) ->\n    t = typeof value\n    t == 'string' or t == 'number' or t == 'boolean' or value == value + '' or value == true or value == false or not isNaN value\n\n\n\n\nnormalizeName = (name) ->\n    name.replace /[A-Z]/g, (name) ->\n        '-' + name.toLowerCase()\n\n\n\n\nnormalizeEvent = (type) ->\n    type = type.slice 2\n    type.charAt(0).toLowerCase() + normalizeName type.slice(1)\n\n\n\n\nthrowNodeCfgError = (cfg) ->\n    throw new Error COMP_CFG_ERROR + ' cfg = ' + getCfgJson cfg\n\n\nthrowViewCfgError = (cfg) ->\n    throw new Error VIEW_CFG_ERROR + ' cfg = ' + getCfgJson cfg\n\n\n\n\ngetCfgJson = (cfg) ->\n    try\n        c = JSON.stringify cfg\n    catch\n    c + ''\n\n\n\n\n###\n    if cfg is string || boolean || number\n        node is a text node\n\n    if cfg is object\n        tag can be\n            string\n                which is mapped to an component class\n                the node name\n\n    cfg =\n        tag:\n        style:\n        className:\n        children:\n        event handlers starting with 'on'\n\n###\n\n\n\n\n\nclass Node\n\n\n    constructor: (cfg) ->\n        @register(cfg)\n        #console.log 'ctx: ', @ctx\n\n\n    register: (@cfg) ->\n        @keep = false\n        if not @__id__\n            @__id__ = ++__id__\n            nodeMap[@__id__] = @\n        @__id__\n\n\n\n    dispose: () -> null\n\n\n    onMount: () -> null\n\n\n    onUnmount: () -> @keep\n\n\n    needsUpdate: () -> true\n    canUpdate:   () -> true\n    update:      () -> update @\n    render:      () -> @cfg\n\n\n    onAdded:   () ->\n\n\n    onRemoved: () ->\n\n\n    add:       (child) ->\n    addAt:     (child, index) ->\n    remove:    (child) ->\n    removeAt:  (index) ->\n\n\n\n\n#    00000000   00000000    0000000   00000000    0000000\n#    000   000  000   000  000   000  000   000  000     \n#    00000000   0000000    000   000  00000000   0000000 \n#    000        000   000  000   000  000             000\n#    000        000   000   0000000   000        0000000 \n\ntagMap     = {}\nrootMap    = {}\nnodeMap    = {}\ndirtyMap   = {}\ndirty      = false\nrafTimeout = null\n\n\n\n\n#    00     00   0000000   00000000 \n#    000   000  000   000  000   000\n#    000000000  000000000  00000000 \n#    000 0 000  000   000  000      \n#    000   000  000   000  000      \n\nmap = (tag, clazz, overwrite = false) ->\n    if isNot(tagMap[tag]) or overwrite\n        tagMap[tag] = clazz\n    null\n\n\n\n\n\n#    000   000  000   000  00     00   0000000   00000000 \n#    000   000  0000  000  000   000  000   000  000   000\n#    000   000  000 0 000  000000000  000000000  00000000 \n#    000   000  000  0000  000 0 000  000   000  000      \n#     0000000   000   000  000   000  000   000  000      \n\nunmap = (tag) ->\n    delete tagMap[tag]\n    null\n\n\n\n\n#     0000000  00000000   00000000   0000000   000000000  00000000\n#    000       000   000  000       000   000     000     000     \n#    000       0000000    0000000   000000000     000     0000000 \n#    000       000   000  000       000   000     000     000     \n#     0000000  000   000  00000000  000   000     000     00000000\n\ncreate = (cfg, root = null, inject = null) ->\n    #console.log 'ViewTree.create: ', cfg, root\n    throwNodeCfgError cfg if isNot cfg\n    tag = cfg.tag\n    if isSimple(cfg) or (not tag and isSimple(cfg.text))\n        clazz = ViewTree.DEFAULT_CLASS\n    else\n        if isFunc(tag) and (tag.prototype instanceof Node or tag == Node)\n            clazz = cfg.tag\n        else\n            throwNodeCfgError cfg if not isString(tag) or tag == ''\n            clazz = tagMap[tag] or ViewTree.DEFAULT_CLASS\n\n    node = createNode clazz, cfg, inject\n    createView node, node.render()\n\n    if root != null #TODO: node.render() is called twice in this case - bad!!!\n        render(node, root)\n\n    else if false #TODO: check, if we really want this\n        if isSimple cfg\n            updateText node, cfg\n        else\n            updateProperties node, cfg\n\n        node.onMount()\n    node\n\n\n\n\n#     0000000  00000000   00000000   0000000   000000000  00000000        000   000   0000000   0000000    00000000\n#    000       000   000  000       000   000     000     000             0000  000  000   000  000   000  000     \n#    000       0000000    0000000   000000000     000     0000000         000 0 000  000   000  000   000  0000000 \n#    000       000   000  000       000   000     000     000             000  0000  000   000  000   000  000     \n#     0000000  000   000  00000000  000   000     000     00000000        000   000   0000000   0000000    00000000\n\ncreateNode = (clazz, cfg, inject) ->\n    inject = cfg.__i__ or inject\n    return new clazz cfg if not inject\n\n    #console.log 'INJECT: ', clazz, inject\n\n    p = clazz.prototype\n    m = {}\n    for key, value of inject\n        m[key] = p[key]\n        p[key] = value\n        #console.log 'INJECT set value: ', key, value\n\n    node       = new clazz cfg\n    node.__i__ = inject\n    delete cfg.__i__\n\n    p[key] = m[key] for key of inject\n    node\n\n\n\n\n#     0000000  00000000   00000000   0000000   000000000  00000000        000   000  000  00000000  000   000\n#    000       000   000  000       000   000     000     000             000   000  000  000       000 0 000\n#    000       0000000    0000000   000000000     000     0000000          000 000   000  0000000   000000000\n#    000       000   000  000       000   000     000     000                000     000  000       000   000\n#     0000000  000   000  00000000  000   000     000     00000000            0      000  00000000  00     00\n\ncreateView = (node, cfg) ->\n    throwViewCfgError(cfg) if isNot cfg\n    if isSimple(cfg) or (not cfg.tag and isSimple(cfg.text))\n        node.tag  = undefined\n        node.text = (cfg.text or cfg) + ''\n        node.view = document.createTextNode node.text\n    else\n        throwViewCfgError(cfg) if not isString(tag = cfg.tag) or tag == ''\n        node.tag  = tag\n        node.view =  document.createElement tag\n    node.view\n\n\n\n\n#    00000000   00000000  000   000  0000000    00000000  00000000 \n#    000   000  000       0000  000  000   000  000       000   000\n#    0000000    0000000   000 0 000  000   000  0000000   0000000  \n#    000   000  000       000  0000  000   000  000       000   000\n#    000   000  00000000  000   000  0000000    00000000  000   000\n\nrender = (node, root) ->\n    #console.log 'ViewTree.render: ', node, root\n    cfg = node.render()\n    if not node.view\n        createView node, cfg\n\n    root.appendChild(node.view)\n\n    if isSimple cfg\n        updateText node, cfg\n    else\n        updateProperties node, cfg\n\n    node.onMount()\n    null\n\n\n\n\n#    00000000   00000000  00     00   0000000   000   000  00000000\n#    000   000  000       000   000  000   000  000   000  000     \n#    0000000    0000000   000000000  000   000   000 000   0000000 \n#    000   000  000       000 0 000  000   000     000     000     \n#    000   000  00000000  000   000   0000000       0      00000000\n\nremove = (nodeOrRoot) ->\n\n\n\n\n#    000   000  00000000   0000000     0000000   000000000  00000000\n#    000   000  000   000  000   000  000   000     000     000     \n#    000   000  00000000   000   000  000000000     000     0000000 \n#    000   000  000        000   000  000   000     000     000     \n#     0000000   000        0000000    000   000     000     00000000\n\nupdate = (node) ->\n    id = node?.__id__\n    if not id\n        throw new Error \"DOM ERROR: can't update node. Node doesn't exist. cfg = \" + getCfgJson(node?.cfg or null)\n\n    if not dirty\n        window.cancelAnimationFrame rafTimeout\n        rafTimeout = window.requestAnimationFrame updateNow\n\n    dirtyMap[id] = true\n    dirty        = true\n    null\n\n\n\n\n#    000   000  00000000   0000000     0000000   000000000  00000000        000   000   0000000   000   000\n#    000   000  000   000  000   000  000   000     000     000             0000  000  000   000  000 0 000\n#    000   000  00000000   000   000  000000000     000     0000000         000 0 000  000   000  000000000\n#    000   000  000        000   000  000   000     000     000             000  0000  000   000  000   000\n#     0000000   000        0000000    000   000     000     00000000        000   000   0000000   00     00\n\nupdateNow = () ->\n    window.cancelAnimationFrame rafTimeout\n    dirty = false\n    #TODO: sort by depth to update top down\n    nodes = []\n    (nodes.push(n) if n = nodeMap[id]) for id of dirtyMap\n    nodes.sort (a, b) -> a.depth - b.depth\n    for node in nodes\n        continue if not node\n        cfg = node.render()\n        if node.tag != cfg.tag\n            replaceChild node, cfg\n        else\n            updateProperties node, cfg\n    null\n\n\n\n\n#    000   000  00000000   0000000     0000000   000000000  00000000        000000000  00000000  000   000  000000000\n#    000   000  000   000  000   000  000   000     000     000                000     000        000 000      000   \n#    000   000  00000000   000   000  000000000     000     0000000            000     0000000     00000       000   \n#    000   000  000        000   000  000   000     000     000                000     000        000 000      000   \n#     0000000   000        0000000    000   000     000     00000000           000     00000000  000   000     000   \n\nupdateText = (node, cfg) ->\n    text = (cfg.text or cfg) + ''\n    if node.text != text\n        node.cfg            = cfg\n        node.text           = text\n        node.view.nodeValue = text\n    null\n\n\n\n\n#    000   000  00000000   0000000     0000000   000000000  00000000        00000000   00000000    0000000   00000000    0000000\n#    000   000  000   000  000   000  000   000     000     000             000   000  000   000  000   000  000   000  000     \n#    000   000  00000000   000   000  000000000     000     0000000         00000000   0000000    000   000  00000000   0000000 \n#    000   000  000        000   000  000   000     000     000             000        000   000  000   000  000             000\n#     0000000   000        0000000    000   000     000     00000000        000        000   000   0000000   000        0000000 \n\nupdateProperties = (node, cfg) ->\n    cfg     = cfg.render() if cfg instanceof Node\n    attrs   = node.attrs or node.attrs = {}\n    propMap = Object.assign {}, attrs, node.events, cfg\n\n    if propMap.hasOwnProperty 'className'\n        updateClass node, cfg.className\n\n    if propMap.hasOwnProperty 'style'\n        updateStyle node, cfg.style\n\n    if propMap.hasOwnProperty 'children'\n        updateChildren node, cfg.children\n\n    delete propMap.tag\n    delete propMap.__i__\n    delete propMap.keep\n    delete propMap.text\n    delete propMap.children\n    delete propMap.style\n    delete propMap.className\n\n    for name of propMap\n        attr  = attrs[name]\n        value = cfg[name]\n        if isBool(attr) or isBool(value)\n            updateBool node, value, name\n        else\n            if /^on/.test name\n                updateEvent node, value, name\n            else\n                updateAttr node, value, name\n    null\n\n\n\n\n\n\n\n\n#     0000000   000000000  000000000  00000000    0000000\n#    000   000     000        000     000   000  000\n#    000000000     000        000     0000000    0000000\n#    000   000     000        000     000   000       000\n#    000   000     000        000     000   000  0000000\n\nupdateAttr = (node, value, name) ->\n    return if node.attrs[name] == value\n    if value != null and value != undefined\n        node.view.setAttribute name, value\n        node.view[name]  = value\n        node.attrs[name] = value\n    else\n        node.view.removeAttribute name\n        delete node.view[name]\n        delete node.attrs[name]\n    null\n\n\n\n\n#     0000000  000       0000000    0000000   0000000\n#    000       000      000   000  000       000\n#    000       000      000000000  0000000   0000000\n#    000       000      000   000       000       000\n#     0000000  0000000  000   000  0000000   0000000\n\nupdateClass = (node, value) ->\n\n    console.log 'updateClass: ', value, node\n\n    return if node.attrs.className == value\n    if value\n        node.view.className  = value\n        node.attrs.className = value\n    else\n        node.view.className  = undefined\n        delete node.attrs.className\n    null\n\n\n\n\n#     0000000  000000000  000   000  000      00000000\n#    000          000      000 000   000      000\n#    0000000      000       00000    000      0000000\n#         000     000        000     000      000\n#    0000000      000        000     0000000  00000000\n\nupdateStyle = (node, style) ->\n\n    console.log 'updateStyle: ', style, node\n\n    view  = node.view\n    attrs = node.attrs\n    sobj  = attrs.style\n\n    if isNot style\n        view.style.cssText = null\n        delete attrs.style\n\n    else if isString style\n        view.style.cssText = style\n        attrs.style        = style\n    else\n        css     = ''\n        sobj    = if isObject(sobj) then sobj else {}\n        changed = false\n        propMap = Object.assign {}, style, sobj\n        for name of propMap\n            value = style[name]\n            if value != sobj[name]\n                changed = true\n            sobj[name] = value\n            if isNot value\n                delete sobj[name]\n            else\n                prop  = normalizeName name\n                css  += prop + ': ' + value + '; '\n\n        if changed\n            if css.length\n                css                = css.slice 0, -1\n                view.style.cssText = css\n                attrs.style        = sobj\n            else\n                view.style.cssText = null\n                delete attrs.style\n    null\n\n\n\n\n#    0000000     0000000    0000000   000\n#    000   000  000   000  000   000  000\n#    0000000    000   000  000   000  000\n#    000   000  000   000  000   000  000\n#    0000000     0000000    0000000   0000000\n\nupdateBool = (node, value, name) ->\n    return if node.attrs[name] == value\n    view = node.view\n    if isNot value\n        view.removeAttribute name\n        delete node.attrs[name]\n    else\n        node.attrs[name] = value\n        if value\n            view.setAttribute name, ''\n            view[name] = true\n        else\n            view.removeAttribute name\n            view[name] = false\n    null\n\n\n\n\n#    00000000  000   000  00000000  000   000  000000000   0000000\n#    000       000   000  000       0000  000     000     000\n#    0000000    000 000   0000000   000 0 000     000     0000000\n#    000          000     000       000  0000     000          000\n#    00000000      0      00000000  000   000     000     0000000\n\nupdateEvent = (node, callback, name) ->\n    events    = node.events or node.events = {}\n    view      = node.view\n    type      = normalizeEvent name\n    listener  = events[name]\n\n    if isString callback\n        callback = node[name]\n\n    if listener != callback\n        if listener\n            view.removeEventListener(type, listener)\n            delete events[name]\n        if callback\n            view.addEventListener(type, callback)\n            events[name] = callback\n    null\n\n\nremoveEvents = (node) ->\n    events = node.events\n    return null if not events\n\n    view = node.view\n    for name, listener of events\n        type = normalizeEvent name\n        view.removeEventListener(type, listener) if listener\n        delete events[name]\n    node.events = null\n    null\n\n\n\n\n#     0000000  000   000  000  000      0000000    00000000   00000000  000   000\n#    000       000   000  000  000      000   000  000   000  000       0000  000\n#    000       000000000  000  000      000   000  0000000    0000000   000 0 000\n#    000       000   000  000  000      000   000  000   000  000       000  0000\n#     0000000  000   000  000  0000000  0000000    000   000  00000000  000   000\n\nupdateChildren = (node, cfgs) ->\n    children = node.children or node.children = []\n    cfgs     = if isString(cfgs) then [cfgs] else cfgs or []\n    l        = if children.length > cfgs.length then children.length else cfgs.length\n    for i in [0...l]\n        child = children[i]\n        cfg   = cfgs[i]\n\n        if not child and not cfg\n            throw new Error \"DOM ERROR: either child or cfg at index #{i} must be defined. Got \" + child + ', ' + cfg\n        if not child\n            addChild node, cfg\n        else if not cfg\n            removeChild child\n        else\n            change child, cfg\n    children.length = cfgs.length\n    null\n\n\n\n\n#     0000000  000   000   0000000   000   000   0000000   00000000\n#    000       000   000  000   000  0000  000  000        000\n#    000       000000000  000000000  000 0 000  000  0000  0000000\n#    000       000   000  000   000  000  0000  000   000  000\n#     0000000  000   000  000   000  000   000   0000000   00000000\n\nchange = (node, cfg) ->\n    canUpdate   = node.canUpdate()\n    needsUpdate = node.needsUpdate()\n    if node == cfg and needsUpdate\n        if canUpdate\n            updateProperties node, node.render()\n        else\n            replaceChild node, node.render()\n\n    else if node.tag != cfg.tag\n        replaceChild node, cfg\n\n    else if node.tag == undefined # text node\n        updateText node, cfg\n\n    else if canUpdate and needsUpdate # tag node\n        updateProperties node, cfg #TODO: cfg can be a node\n\n    false\n\n\n\n\n#     0000000   0000000    0000000\n#    000   000  000   000  000   000\n#    000000000  000   000  000   000\n#    000   000  000   000  000   000\n#    000   000  0000000    0000000\n\naddChild = (node, cfg) ->\n    if cfg instanceof Node\n        child = cfg\n        cfg   = child.render()\n    else\n        child = create cfg, null, cfg.__i__ or node.__i__\n\n    if not child.view\n        child.view = createView child, cfg\n\n    node.children.push child\n    node.view.appendChild child.view\n    child.parent = node\n\n\n    if isSimple(cfg) or (not cfg.tag and isSimple(cfg.text))\n        updateText child, cfg\n    else\n        updateProperties child, cfg\n\n    child.onMount()\n    null\n\n\n\n\n#    00000000   00000000  00     00   0000000   000   000  00000000\n#    000   000  000       000   000  000   000  000   000  000\n#    0000000    0000000   000000000  000   000   000 000   0000000\n#    000   000  000       000 0 000  000   000     000     000\n#    000   000  00000000  000   000   0000000       0      00000000\n\nremoveChild = (child) ->\n    #TODO: node.children currently not handled -> handled by changing node.children.length in updateChildren\n\n    #console.log 'removeChild: ', child, node\n\n    node = child.parent\n    view = child.view\n    disposeNode child\n    node.view.removeChild view\n    null\n\n\n\n\n#    00000000   00000000  00000000   000       0000000    0000000  00000000\n#    000   000  000       000   000  000      000   000  000       000\n#    0000000    0000000   00000000   000      000000000  000       0000000\n#    000   000  000       000        000      000   000  000       000\n#    000   000  00000000  000        0000000  000   000   0000000  00000000\n\nreplaceChild = (child, cfg) ->\n    consol.log 'ViewTree.replaceChild: ', child, cfg\n    node     = child.parent\n    children = node.children\n    i        = children.indexOf child\n    view     = child.view\n\n    disposeNode child\n\n    if cfg instanceof Node\n        child = cfg\n        cfg   = child.render()\n    else\n        child = create cfg, null, cfg.__i__ or node.__i__\n\n    if not child.view\n        child.view = createView child, cfg\n\n    children[i]  = child\n    child.parent = node\n    node.view.replaceChild child.view, view\n\n    if isSimple(cfg) or (not cfg.tag and isSimple(cfg.text))\n        updateText child, cfg\n    else\n        updateProperties child, cfg\n\n    child.onMount()\n    #console.log 'DOM.replaceChild: create = ', child, cfg\n    null\n\n\n\n\n#    0000000    000   0000000  00000000    0000000    0000000  00000000\n#    000   000  000  000       000   000  000   000  000       000\n#    000   000  000  0000000   00000000   000   000  0000000   0000000\n#    000   000  000       000  000        000   000       000  000\n#    0000000    000  0000000   000         0000000   0000000   00000000\n\ndisposeNode = (node) ->\n    #console.log 'disposeNode: ', node\n    if node.onUnmount() != true\n\n        console.log 'dispose node now: ', node\n        removeEvents node\n\n        if node.children and node.children.length\n            disposeNode child for child in node.children\n\n        delete node.children\n        delete node.view\n        delete nodeMap[node.__id__]\n\n    node.parent = null\n    null\n\n\n\n\n\n\n\n\n#    00000000    0000000   00000000\n#    000   000  000   000  000\n#    0000000    000000000  000000\n#    000   000  000   000  000\n#    000   000  000   000  000\n\nif typeof window != 'undefined'\n    lastTime = 0\n    vendors  = ['webkit', 'moz']\n    for vendor in vendors\n        break if window.requestAnimationFrame\n        window.requestAnimationFrame = window[vendor + 'RequestAnimationFrame']\n        window.cancelAnimationFrame  = window[vendor + 'CancelAnimationFrame' ] or window[vendor + 'CancelRequestAnimationFrame']\n\n\n    if not window.requestAnimationFrame\n        window.requestAnimationFrame = (callback) ->\n            currTime   = Date.now()\n            timeToCall = Math.max 0, 16 - currTime + lastTime\n            rAF        = () -> callback currTime + timeToCall\n            id         = window.setTimeout rAF, timeToCall\n            lastTime   = currTime + timeToCall\n            id\n\n\n    if not window.cancelAnimationFrame\n        window.cancelAnimationFrame = (id) ->\n            clearTimeout id\n            null\n\n\n\n\n#     0000000    0000000   0000000  000   0000000   000   000\n#    000   000  000       000       000  000        0000  000\n#    000000000  0000000   0000000   000  000  0000  000 0 000\n#    000   000       000       000  000  000   000  000  0000\n#    000   000  0000000   0000000   000   0000000   000   000\n\nif typeof Object.assign == 'undefined'\n    Object.assign = (target, args...) ->\n        for src in args\n            for key of src\n                target[key] = src[key];\n        target\n\n\n\n\n\n\n\n\nViewTree =\n    Node:             Node\n    DEFAULT_CLASS:    Node\n    HANDLE_CTX:       true\n    HANDLE_DATA_TREE: true\n    COMP_CFG_ERROR:   COMP_CFG_ERROR\n    VIEW_CFG_ERROR:   VIEW_CFG_ERROR\n    map:              map\n    unmap:            unmap\n    create:           create\n    render:           render\n    remove:           remove\n    update:           update\n    updateNow:        updateNow\n\n\n\n\nif typeof module != 'undefined'\n    module.exports = ViewTree\nif typeof window != 'undefined'\n    window.ViewTree = ViewTree\nelse\n    this.ViewTree = ViewTree"]}},{"offset":{"line":934,"column":0},"map":{"version":3,"file":"../../src/js/data-tree.js","sourceRoot":"","sources":["../../src/coffee/data-tree.coffee"],"names":[],"mappings":"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","sourcesContent":["__id__ = 0\n\n\nclass TreeTwo\n\n\n    constructor: (root) ->\n        @nodeMap      = {}\n        @bindings     = {}\n        @history      = []\n        @historyIndex = 0\n        @setRoot(root) if root\n\n\n\n\n    setRoot: (obj) ->\n        #TODO: add disposement for existing root\n        @rootNode = @createNode null, '/', obj\n        @root     = obj\n\n\n    getRoot: () ->\n        return null if not @rootNode\n        @rootNode.value\n\n\n    has: (obj) ->\n       typeof obj == 'object' and @nodeMap[obj.__node_id__] != undefined\n\n\n\n\n    bind: (obj, name, callback) ->\n        node  = if typeof obj == 'object' then @nodeMap[obj.__node_id__] else null\n        if not node\n            console.error error = 'Error: object not part of this tree: ', obj\n            throw new Error error\n\n        paths = {}\n        @addPaths node, name, null, (path) =>\n            callbacks = @bindings[path] or @bindings[path] = []\n            if callbacks.indexOf(callback) == -1\n                console.log 'add binding: ', path\n                callbacks.push callback\n                paths[path] = callback\n        #console.log 'bind to: ', paths\n        paths\n\n\n\n\n    unbind: (paths) ->\n        unbound = total = 0\n        for path, callback of paths\n            callbacks = @bindings[path]\n            ++total\n            if callbacks\n                index = callbacks.indexOf callback\n                if index > -1\n                    ++unbound\n                    callbacks.splice index, 1\n                delete @bindings[path] if callbacks.length == 0\n        unbound == total\n\n\n\n\n    update: (obj, name) ->\n        node = if typeof obj == 'object' then @nodeMap[obj.__node_id__] else @rootNode\n        if not node\n            console.error error = 'Error: object not part of this tree: ', obj\n            throw new Error error\n\n        @currentActions = []\n        @currentPaths   = {}\n        @updatedMap     = {}\n        if name != undefined\n            @updateProp node, name\n        else\n            @updateNode node\n\n        if @currentActions.length\n            if @historyIndex < @history.length\n                #TODO: !!! add disposement\n                @history.length = @historyIndex\n            @history.push @currentActions\n            ++@historyIndex\n            #console.log 'changed paths: ', @currentPaths\n            @currentActions.paths = @currentPaths\n            @dispatchBindings @currentPaths\n        false\n\n\n\n\n    undo: () ->\n        if @historyIndex > 0\n            actions = @history[--@historyIndex]\n            action.undo() for action in actions\n            #console.log 'undo: ', actions\n            @dispatchBindings actions.paths\n        else\n            console.log 'undo not possible!!! ', @historyIndex\n        null\n\n\n\n\n    redo: () ->\n        if @historyIndex < @history.length   \n            actions = @history[@historyIndex++]\n            action.redo() for action in actions\n            #console.log 'redo: ', actions\n            @dispatchBindings actions.paths\n        else\n            console.log 'redo not possible!!! ', @historyIndex\n        null\n\n\n\n\n    dispatchBindings: (paths) ->\n        called     = []\n        dispatched = false\n        for path, node of paths\n            parts      = path.split '/'\n            name       = parts.pop() or ''\n            ppath      = parts.join('/') + '/*'\n            callbacks  = @bindings[path]\n            pcallbacks = @bindings[ppath]\n            value      = node.value\n            #console.log 'dispatch path: ', path, node.value[name]\n            if callbacks\n                for callback in callbacks\n                    if called.indexOf(callback) == -1\n                        callback value[name], value, name, path\n                        dispatched = true\n                        called.push callback\n\n            if pcallbacks\n                for callback in pcallbacks\n                    #if called.indexOf(callback) == -1\n                    callback value\n                    dispatched = true\n                    #called.push callback\n        dispatched\n\n\n\n\n    createNode: (owner, name, value) ->\n        node = @nodeMap[value.__node_id__] if value\n        if not node\n            id = ++__id__\n            node =\n                id:     id\n                value:  value\n                type:   'value'\n                owners: {}\n\n            @nodeMap[node.id] = node\n            if owner\n                #console.log 'add path: ', name, owner\n                @addPaths owner, name, @currentPaths\n                addOwner(node, owner, name)\n\n            if value\n                if value.constructor.name == 'Array'\n                    Object.defineProperty value, '__node_id__',\n                        value:      node.id\n                        enumerable: false\n\n                    node.type  = 'array'\n                    node.props = props = []\n                    l          = value.length\n                    for i in [0 ... l]\n                        props[i] = @createNode node, i, value[i]\n\n                else if value.constructor.name == 'Object'\n                    Object.defineProperty value, '__node_id__',\n                        value:      node.id\n                        enumerable: false\n\n                    node.type  = 'object'\n                    node.props = props = {}\n                    for key of value\n                        props[key] = @createNode node, key, value[key]\n        node\n\n\n\n\n    updateNode: (node) ->\n        return true if @updatedMap[node.id]\n        @updatedMap[node.id] = true\n\n        value = node.value\n        props = node.props\n        if node.type == 'array'\n            pl = props.length\n            vl = value.length\n            l  = if pl > vl then pl else vl\n            for i in [0...l]\n                @updateProp node, i\n            if pl != vl\n                @addChangeLengthAction node, pl, vl\n                props.length = vl\n\n        else if node.type == 'object'\n            keys = Object.assign {}, props, value\n            for key of keys\n                @updateProp node, key\n        null\n\n\n\n\n    updateProp: (node, name) ->\n        child = node.props[name]\n        value = node.value[name]\n\n        if not child and value == undefined\n            console.error \"Error: either old or new value must exist for property \\\"#{name}\\\" of node: \", node\n            return false\n\n        # value != undefined but no child, so create a new child\n        if not child\n            child = @createNode node, name, value\n            @addCreateAction child, node, name\n\n        # child exists but no value, so remove the child\n        else if value == undefined\n            @updateNode child if child.type != 'value'\n            removeOwner child, node, name\n            @addRemoveAction child, node, name\n\n        else\n            # not changed\n            if child.value == value\n\n                # the child's value hasn't changed, so update the child\n                if child.type != 'value'\n                    @updateNode(child) if not @updatedMap[child.id]\n\n                # no change of simple node\n                else\n                    return false\n            # changed\n            else\n                type = 'value'\n                if value\n                    if value.constructor.name == 'Array'\n                        type = 'array'\n                    else if value.constructor.name == 'Object'\n                        type = 'object'\n\n                # value changed from simple to complex or reverse or instance changed, so replace the child\n                if type != 'value' or type != child.type\n                    @updateNode child if child.type != 'value'\n                    removeOwner child, node, name\n                    next = @createNode node, name, value\n                    @addSwapAction child, node, name, next\n\n                # skip unnecessary creation of simple nodes, because they are unique to their owner\n                else\n                    @addChangeValueAction child, node, name, value\n                    child.value = value\n        null\n\n\n\n\n    addCreateAction: (node, owner, name) ->\n        @addPaths owner, name, @currentPaths\n        @currentActions.push\n            type:  'create'\n            undo: () -> removeOwner node, owner, name\n            redo: () -> addOwner    node, owner, name\n        null\n\n\n    addRemoveAction: (node, owner, name) ->\n        @addPaths owner, name, @currentPaths\n        @currentActions.push\n            type:  'remove'\n            undo: () -> addOwner    node, owner, name\n            redo: () -> removeOwner node, owner, name\n        null\n\n\n    addSwapAction: (node, owner, name, next) ->\n        @addPaths owner, name, @currentPaths\n        @currentActions.push\n            type:  'swap'\n            undo: () ->\n                removeOwner next, owner, name\n                addOwner    node, owner, name\n            redo: () ->\n                removeOwner node, owner, name\n                addOwner    next, owner, name\n        null\n\n\n    addChangeValueAction: (node, owner, name, newValue) ->\n        @addPaths owner, name, @currentPaths\n        @currentActions.push\n            type:  'changeValue'\n            oldValue: node.value\n            undo: () ->\n                node.value        = this.oldValue\n                owner.value[name] = this.oldValue\n            redo: () ->\n                node.value        = newValue\n                owner.value[name] = newValue\n        null\n\n\n    addChangeLengthAction: (node, oldLength, newLength) ->\n        @currentActions.push\n            type:  'changeLength'\n            undo: () -> node.value.length = node.props.length = oldLength\n            redo: () -> node.value.length = node.props.length = newLength\n        null\n\n\n\n\n    addPaths: (node, path, paths, callback, root) ->\n        path  = if path == null or path == undefined then '' else path + ''\n        path  = '/' + path if path\n        paths = paths or {}\n        root  = root or node\n        #console.log 'addPaths: ', path\n        if node == @rootNode\n            #console.log 'add path: ', path\n            paths[path] = root\n            callback path if callback\n        else\n            for id, names of node.owners\n                owner = @nodeMap[id]\n                for n of names\n                    @addPaths owner, n + path, paths, callback, root\n        paths\n\n\n\n\naddOwner = (node, owner, name) ->\n    owners = node.owners\n    names  = owners[owner.id] || owners[owner.id] = {}\n    if names[name]\n        return null\n    names[name]       = true\n    owner.props[name] = node\n    owner.value[name] = node.value\n    null\n\n\n\n\nremoveOwner = (node, owner, name) ->\n    owners = node.owners\n    names  = owners[owner.id]\n    if not names or not names[name]\n        return null\n    delete names[name]\n    delete owner.props[name]\n    delete owner.value[name]\n    null\n\n\n\n#    0000000    00000000  00000000  000  000   000  00000000        00000000   00000000    0000000   00000000\n#    000   000  000       000       000  0000  000  000             000   000  000   000  000   000  000   000\n#    000   000  0000000   000000    000  000 0 000  0000000         00000000   0000000    000   000  00000000\n#    000   000  000       000       000  000  0000  000             000        000   000  000   000  000\n#    0000000    00000000  000       000  000   000  00000000        000        000   000   0000000   000\n\n\nif Object.defineProperty == undefined\n    Object.defineProperty = (obj, name, data) ->\n        obj[name] = data.value\n\n\n\n\nif typeof module != 'undefined'\n    module.exports = TreeTwo\nif typeof window != 'undefined'\n    window.TreeTwo = TreeTwo\nelse\n    this.TreeTwo = TreeTwo"]}},{"offset":{"line":1378,"column":0},"map":{"version":3,"file":"app-view.js","sourceRoot":"","sources":["../coffee/app-view.coffee"],"names":[],"mappings":";AAAA;AAAA,MAAA,iBAAA;IAAA;;;;EAAA,QAAA,GAAW,OAAA,CAAQ,wBAAR;;EAGL;;;IAGW,iBAAC,GAAD;;;;MACT,yCAAM,GAAN;MACA,IAAC,CAAA,KAAD,GAAc,GAAG,CAAC;MAClB,IAAC,CAAA,IAAD,GAAc,GAAG,CAAC,KAAK,CAAC;MACxB,IAAC,CAAA,KAAD,GAAc,IAAC,CAAA,IAAI,CAAC;MACpB,IAAC,CAAA,IAAI,CAAC,KAAN,GAAc,IAAC,CAAA,KAAD,GAAS;IALd;;sBAQb,OAAA,GAAS,SAAA;MACL,IAAC,CAAA,IAAI,CAAC,OAAN,GAAgB,CAAC,IAAI,CAAC,MAAL,CAAA,CAAA,GAAgB,GAAhB,GAAsB,GAAvB,CAAA,IAA+B;MAC/C,IAAC,CAAA,IAAI,CAAC,KAAN,GAAgB,IAAC,CAAA,KAAD,GAAS,CAAA,WAAA,GAAW,CAAC,IAAC,CAAA,KAAK,CAAC,YAAP,GAAsB,CAAvB,CAAX;MACzB,IAAC,CAAA,KAAK,CAAC,MAAP,CAAA;MACA,IAAC,CAAA,MAAD,CAAA;aACA;IALK;;sBAQT,IAAA,GAAM,SAAA;MACF,IAAC,CAAA,KAAK,CAAC,IAAP,CAAA;aACA,IAAC,CAAA,MAAD,CAAA;IAFE;;sBAKN,IAAA,GAAM,SAAA;MACF,IAAC,CAAA,KAAK,CAAC,IAAP,CAAA;aACA,IAAC,CAAA,MAAD,CAAA;IAFE;;sBAKN,MAAA,GAAQ,SAAA;aACJ;QAAA,GAAA,EAAK,KAAL;QACA,QAAA,EAAU;UACN;YAAA,GAAA,EAAW,IAAX;YACA,SAAA,EAAW,UADX;YAEA,KAAA,EAAW,0BAAA,GAA2B,IAAC,CAAA,IAAI,CAAC,OAAjC,GAAyC,MAFpD;YAGA,OAAA,EAAW,IAAC,CAAA,OAHZ;YAIA,QAAA,EAAW;cACP;gBAAA,GAAA,EAAU,KAAV;gBACA,KAAA,EAAU,gBADV;gBAEA,QAAA,EAAU,IAAC,CAAA,IAAI,CAAC,KAFhB;eADO;aAJX;WADM,EAWN;YAAA,GAAA,EAAU,QAAV;YACA,QAAA,EAAW,IAAC,CAAA,KAAK,CAAC,YAAP,GAAsB,CADjC;YAEA,OAAA,EAAW,IAAC,CAAA,IAFZ;YAGA,QAAA,EAAU,MAHV;WAXM,EAgBN;YAAA,GAAA,EAAU,QAAV;YACA,QAAA,EAAU,IAAC,CAAA,KAAK,CAAC,YAAP,IAAuB,IAAC,CAAA,KAAK,CAAC,OAAO,CAAC,MADhD;YAEA,OAAA,EAAU,IAAC,CAAA,IAFX;YAGA,QAAA,EAAU,MAHV;WAhBM;SADV;;IADI;;;;KA7BU,QAAQ,CAAC;;EAwD/B,MAAM,CAAC,OAAP,GAAiB;AA3DjB","sourcesContent":["ViewTree = require '../../src/js/view-tree'\n\n\nclass AppView extends ViewTree.Node\n\n\n    constructor: (cfg) ->\n        super cfg\n        @model      = cfg.model\n        @data       = cfg.model.root\n        @title      = @data.title\n        @data.title = @title + \" click me!\"\n\n\n    onClick: () =>\n        @data.bgGreen = (Math.random() * 100 + 155) >> 0\n        @data.title   = @title + \" clicks: #{@model.historyIndex + 1}\"\n        @model.update()\n        @update()\n        null\n\n\n    undo: () =>\n        @model.undo()\n        @update()\n\n\n    redo: () =>\n        @model.redo()\n        @update()\n\n\n    render: () ->\n        tag: 'div'\n        children: [\n            tag:       'h1'\n            className: 'my-class'\n            style:     \"background-color: rgb(0,#{@data.bgGreen},0);\"\n            onClick:   @onClick\n            children:  [\n                tag:      'div'\n                style:    'padding: 20px;'\n                children: @data.title\n            ]\n        ,\n            tag:      'button'\n            disabled:  @model.historyIndex < 1\n            onClick:   @undo\n            children: 'undo'\n        ,\n            tag:      'button'\n            disabled: @model.historyIndex >= @model.history.length\n            onClick:  @redo\n            children: 'redo'\n        ]\n\n\n\n\nmodule.exports = AppView"]}}]}